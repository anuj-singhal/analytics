Steps to follow:
Best practices:
1. Project Structure (packages)
	- Data
	- src
		- main	
			- base/core (abstract classes)
				- <Define the structure / unimplemented methods to use in the classes>
			- config
				- <place configuration file that to be use in the project>
			- job
				- <Implementations of logics>
		- tests
			- <add all test files that will cover main implementation of logics>
			- <can add multiple tests files>
			- <can write tests in pytest / unittest / nosetest>
	- app.py
		<its a main pipeline job used to run all the logics>
	
	- If run with git and CI tool the require below files:
		- requirements.txt
		- README.md
		- install.sh
		
2. 	Parametrize values as much as possible (Ignore Hard coded)
	- Do do this there are multiple ways
		1. Use .config file and read it outside from the project
		2. Use command line parameters Ex. input_path = sys.argv[1]

3. Documentation of coded
	- Document your code, will help others to understand the flow and easy to maintain
	
4. Use proper code style / caseing
	- use either camelCase / snake_case and follow the same in the entire project
	- recommended - camelCase for Java and Scala / scake_case for shell, perl and python
	
5. 	Use unit tests and code coverage
	- Always use Unit tests to secure your code for any changes
	- Code coverage is a best practice to cover all the main code

6. Use Versioning control
	- Always use version control tool - recommented GITHub
	- This will help developers to secure the latest code
	
7. Continous Integration
	- Always use continous integration tool like (CircleCI / TravisCI / Jenkins)
	- This will help developers to catch any error while commiting in the code

8. Continous Deployment
	- Use CD to deploy automatic if build success.
	- https://docs.travis-ci.com/
	- https://travis-ci.com/github/anuj-singhal/covid19-analytics
	
	












	